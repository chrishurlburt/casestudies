* = low priority
! = high priority

Overall:
  -UI/UX design
    Views:
      -login
      -404 page/other error pages
      -landing page
      -search results
      -single study
  -CASTEL branding
  -bug testing (on going)
  !-refactor queries to leverage eager loading
  !-error handling
  -refactor all code for effeciency, maintainability, scalability and best practices (on going)
  -landing page access from dashboard

Admin Dashboard:

  CASE STUDIES
    !-add fields to match survey (completed on time, etc.)

  USERS:
    !-warn users before they deactivate themselves or change their own permissions. ajax to get logged in user, create warning modal
    -more user permission layers(super admin, etc.)

  MISC:
    -full outcome/course descriptions in modals
    -error/success messages UI

Search Engine:

  LANDING:
    -"view all" studies option

  RESULTS:
    -search terms
    -handle situation with no results after filter
    -include exceprt, date and other info for each study in results
    -sort options(date, author, etc)

  SINGLE STUDY:
    -what options should this page include?
    -what should a case study look like?

  OTHER PAGES:
    *-case study submition page
    *-about page










Completed:
  -rework app routing from search page to results page
  !-sessions cached in redis
  -pagination
  -add feature to revert case study to draft
  !-fix database schema bug to allow more characters on fields
  !-filters
  !-fix user deletion bug
  -soft deletes, “trashed studies” section
  -pagination for trashed, drafts
  !-think of a name
  !-keyword entry to allow spaces as delimiters
  -cache queries with redis to increase speed
  -when changing custom url, warn user that case study will 404 at old url
  -UI for case studies breaks with a lot outcomes
  -password change
  -when a user is deleted, notifications dont show properly because they dont include trashed users (->withTrashed()?)
  -fix custom url form request error message
  -tooltips
  -name attached to notifcation on main dashboard page
  -DRY out cases views (create & edit forms)
  -update learning outcomes on update course view
  !-implement sort and filter options (jQuery datatables)
    DIGITALOCEAN
    -provision for LAMP server and redis server
    -develop automated deployment workflow via git
    PROFILE:
    -see other users' profile and their case studies.
    GOOGLE ANALYTICS
    -set up google analytics
    -SEO

  Name:
    -RWU CM Case Studies to support Expernential Learning (CASTEL)


